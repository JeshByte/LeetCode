Here for each fruit we have to repeatedly go through the entire baskets array. So we can use square root decomposition to break it down into blocks. We will also precompute the max values for each block. So using that we will know whether to check this block or not. If yes, then we will go through that particular block, finding the required basket and updating the max value for that block. This will consist of 3 nested loops but the time complexity won't be quadratic. The outer loop will always run n times. Now for each fruit, there are 2 cases. The first case is that there is no valid block. Then the 2nd loop will just run sqrt(n) times and stop. The other case would be that there is a valid block. Then the 2nd loop will run x times where x<sqrt(n) and the 3rd loop will run sqrt(n) times. Thus in this case the inner loops will run at most 2*sqrt(n) times. So asymptotically the inner loops will run at most sqrt(n) times and thus the total time complexity will be n*sqrt(n) which will easily pass the given constraints.
