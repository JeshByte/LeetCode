So to reach our objective its always beneficial to either remove the current maximum or minimum element as removing any other element won't affect our condition. So we should first sort our array. So if we think about it, our final optimal array will consist of all the elements from some subarray of this sorted array with the first element being the minimum and the last one being the maximum. And for such a subarray the number of elements to be removed will be the elements before and after the segment. So we can basically go through each element from left to right, and then use binary search to find an optimal maximum for it. The elements between these two elements(both inclusive) will be the valid subarray for that particular minimum. We need to find the longest possible such subarray and from it we will get the minimum required operations.
