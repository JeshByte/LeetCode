So here we can't use brute force. There are 2 cases here - land-water or water-land. We will handle both of these cases seperately. Lets take the case of land-water first. If we take each individual land ride, then there are 2 cases here - one is we go for a water ride which has already started so we won't need to wait. The other one is we go for a water ride which hasn't started yet so we need to wait a bit. In the first case the total time will be land-finish-time + water-duration. So for this we can first find the earliest water ride which will start at a time >= land-finish-time using binary search. Then we will know that all of the rides before it have finished before so we just need to find the one with the minimum duration which can be found using a precomputed minimum prefix array. In the other case the total time will be water-finish-time. So we have already found the water ride with time >=land-finish-time using binary search. Thus this and all the rides after it will finish later so we just need to find the one with the minimum finish time which can be found using a precomputed minimum suffix array. So the minimum of both of these cases will give us the minimum time for each land ride. Similarly we can find the minimum time for the case of water-land. The final minimum value would be our answer.
