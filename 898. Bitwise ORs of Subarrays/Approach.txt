This can be done easily in n^2. We can observe that the OR values of all subarrays ending at i are going to be just (OR values of subarrays ending at i-1)|a[i]. Now the main trick here is that the number of unique OR values for a subarray ending at a fixed position can be at most 32(assuming the max number has atmost 32 bits). This is because when you OR a number, the only way to get a new result is to set an unset bit. If a bit is already set you can't unset it anymore. So we can set at most 32 new bits for a particular index, giving us at most 32 unique values. So we can just maintain 2 sets. One will be a master set containing all the unique values across all the subarrays and the other one will just contain the unique values from the subarrays ending at the previous index. Using this latter set, we can find the unique values for the given index and add it to the master set and so on. As the set size will be small(at most 32), this would work within the given constraints. 
